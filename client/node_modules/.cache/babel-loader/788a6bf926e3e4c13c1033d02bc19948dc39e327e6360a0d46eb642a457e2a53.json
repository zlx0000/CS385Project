{"ast":null,"code":"var _jsxFileName = \"/home/zlx/src/CS385Project/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// import our data from the Javascript file.\n// JSON object representing Spotify streams to August 2023\nimport { items } from \"./items\";\n\n// Writing our own functions for use in our app\n// Writing a comment about a specific number.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction writeNumberAsWords(n) {\n  let nAsStr = n.toString(10); // our number is in base 10\n  let digits = nAsStr.length; // number of digits\n  let firstDigit = nAsStr.charAt(0);\n  let message = \"nothing\";\n  if (digits === 9) {\n    message = \"(At least \" + firstDigit + \" hundred million!)\";\n  } else if (digits === 10) {\n    message = \"(At least \" + firstDigit + \" billion!)\";\n  } else {\n    message = \"(Lots of streams)\";\n  }\n  return message;\n}\n\n// Parent component - App\nfunction App() {\n  _s();\n  // lets keep the searchTerm as a state varaiable\n  // searchTerm is given an initial value of empty string\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // Here is our textbox handler function.\n  // This handles the event that is fired when\n  // the search form (text box) changes\n  function onSearchFormChange(event) {\n    // An event is generated by Javascript.\n    // We use the hook setSearchTerm to safely assign\n    // the current value in the textbox to searchTerm\n    setSearchTerm(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CS385 Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your current search term is [\", searchTerm, \"]\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Type your search here: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onSearchFormChange,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultsComponent, {\n      searchTermFromParent: searchTerm,\n      arrayFromParent: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n// This is the child component. It is used to display the results\n// of the searches conducted. The parent must provide the searchTerm\n// and access to the array of JSON objects.\n_s(App, \"+YdqPTpSlp4r5CWiFEQiF/UjThM=\");\n_c = App;\nfunction ResultsComponent(props) {\n  // Within this component or function we create our\n  // filter function. It will be needed to conduct\n  // the search of the array of JSON objects.\n\n  function filterFunction(searchTerm) {\n    return function (items) {\n      // convert everything to lower case for string matching\n      let itemName = items.item.itemName.toLowerCase();\n      //      let itemType = items.item.itemType.toLowerCase();\n      return searchTerm !== \"\" && itemName.includes(searchTerm.toLowerCase());\n    };\n  }\n  // We can use the filter function to tell us how many search results\n  // we have. We find the length of the filtered array\n\n  let numberResults = props.arrayFromParent.filter(filterFunction(props.searchTermFromParent)).length;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Child Component: Search Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"There are \", numberResults, \" search results \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), numberResults === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 31\n    }, this), numberResults > 0 && numberResults < 10 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Some results, not many\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 51\n    }, this), numberResults > 10 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Lots of results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 30\n    }, this), props.arrayFromParent.filter(filterFunction(props.searchTermFromParent)).map((a, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: a.item.itemName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 18\n      }, this), \", Type:\", /*#__PURE__*/_jsxDEV(\"i\", {\n        children: a.item.itemType.supClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 49\n      }, this), \", Owner:\", a.owner.ownerName, \" \"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n} // end of child component for results.\n_c2 = ResultsComponent;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ResultsComponent\");","map":{"version":3,"names":["React","useState","items","jsxDEV","_jsxDEV","Fragment","_Fragment","writeNumberAsWords","n","nAsStr","toString","digits","length","firstDigit","charAt","message","App","_s","searchTerm","setSearchTerm","onSearchFormChange","event","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","ResultsComponent","searchTermFromParent","arrayFromParent","_c","props","filterFunction","itemName","item","toLowerCase","includes","numberResults","filter","map","a","index","itemType","supClass","owner","ownerName","_c2","$RefreshReg$"],"sources":["/home/zlx/src/CS385Project/client/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n// import our data from the Javascript file.\n// JSON object representing Spotify streams to August 2023\nimport { items } from \"./items\";\n\n// Writing our own functions for use in our app\n// Writing a comment about a specific number.\nfunction writeNumberAsWords(n) {\n  let nAsStr = n.toString(10); // our number is in base 10\n  let digits = nAsStr.length; // number of digits\n  let firstDigit = nAsStr.charAt(0);\n\n  let message = \"nothing\";\n  if (digits === 9) {\n    message = \"(At least \" + firstDigit + \" hundred million!)\";\n  } else if (digits === 10) {\n    message = \"(At least \" + firstDigit + \" billion!)\";\n  } else {\n    message = \"(Lots of streams)\";\n  }\n\n  return message;\n}\n\n// Parent component - App\nfunction App() {\n  // lets keep the searchTerm as a state varaiable\n  // searchTerm is given an initial value of empty string\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // Here is our textbox handler function.\n  // This handles the event that is fired when\n  // the search form (text box) changes\n  function onSearchFormChange(event) {\n    // An event is generated by Javascript.\n    // We use the hook setSearchTerm to safely assign\n    // the current value in the textbox to searchTerm\n    setSearchTerm(event.target.value);\n  }\n\n  return (\n    <>\n      <h1>CS385 Demo</h1>\n      <p>Your current search term is [{searchTerm}]</p>\n      <form>\n        <h3>Type your search here: </h3>\n        <input onChange={onSearchFormChange} type=\"text\" />\n      </form>\n      <hr />\n      <ResultsComponent\n        searchTermFromParent={searchTerm}\n        arrayFromParent={items}\n      />\n    </>\n  );\n}\n\n// This is the child component. It is used to display the results\n// of the searches conducted. The parent must provide the searchTerm\n// and access to the array of JSON objects.\n\nfunction ResultsComponent(props) {\n  // Within this component or function we create our\n  // filter function. It will be needed to conduct\n  // the search of the array of JSON objects.\n\n  function filterFunction(searchTerm) {\n    return function (items) {\n      // convert everything to lower case for string matching\n      let itemName = items.item.itemName.toLowerCase();\n//      let itemType = items.item.itemType.toLowerCase();\n      return (\n        searchTerm !== \"\" &&\n        (itemName.includes(searchTerm.toLowerCase()))\n      );\n    };\n  }\n  // We can use the filter function to tell us how many search results\n  // we have. We find the length of the filtered array\n\n  let numberResults = props.arrayFromParent.filter(\n    filterFunction(props.searchTermFromParent)\n  ).length;\n\n  return (\n    <>\n      <h1>Child Component: Search Results</h1>\n      <h2>There are {numberResults} search results </h2>\n      {numberResults === 0 && <p>No results</p>}\n      {numberResults > 0 && numberResults < 10 && <p>Some results, not many</p>}\n      {numberResults > 10 && <p>Lots of results</p>}\n      {props.arrayFromParent\n        .filter(filterFunction(props.searchTermFromParent))\n        .map((a, index) => (\n          <p key={index}>\n            Name:<b>{a.item.itemName}</b>, Type:<i>{a.item.itemType.supClass}</i>, Owner:{a.owner.ownerName}{\" \"}\n          </p>\n        ))}\n    </>\n  );\n} // end of child component for results.\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}