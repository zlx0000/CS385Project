{"ast":null,"code":"var _jsxFileName = \"/home/zlx/src/CS385Project/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n\n// Writing our own functions for use in our app\n// Writing a comment about a specific number.\n/*\nfunction writeNumberAsWords(n) {\n  let nAsStr = n.toString(10); // our number is in base 10\n  let digits = nAsStr.length; // number of digits\n  let firstDigit = nAsStr.charAt(0);\n\n  let message = \"nothing\";\n  if (digits === 9) {\n    message = \"(At least \" + firstDigit + \" hundred million!)\";\n  } else if (digits === 10) {\n    message = \"(At least \" + firstDigit + \" billion!)\";\n  } else {\n    message = \"(Lots of streams)\";\n  }\n\n  return message;\n}\n*/\n\n// Parent component - App\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // lets keep the searchTerm as a state varaiable\n  // searchTerm is given an initial value of empty string\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const URL = \"http://45.77.38.37\";\n    async function fetchitemData() {\n      try {\n        const response = await fetch(URL);\n        const itemDataJson = await response.json(); // wait for the JSON response\n        setLoading(true);\n        // IMPORTANT - look at the JSON response - look at the structure\n        // This is where many errors occur!\n        setData(itemDataJson);\n      } catch (error) {\n        setError(error); // take the error message from the system\n        setLoading(false);\n      } // end try-catch block\n    } // end of fetchData\n    fetchitemData();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Opps! An error has occurred: \", error.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  } else if (loading === false) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Waiting for the train data ...... waiting....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CS385 Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your current search term is [\", searchTerm, \"]\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Type your search here: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: onSearchFormChange,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResultsComponent, {\n        searchTermFromParent: searchTerm,\n        arrayFromParent: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  // Here is our textbox handler function.\n  // This handles the event that is fired when\n  // the search form (text box) changes\n  function onSearchFormChange(event) {\n    // An event is generated by Javascript.\n    // We use the hook setSearchTerm to safely assign\n    // the current value in the textbox to searchTerm\n    setSearchTerm(event.target.value);\n  }\n}\n\n// This is the child component. It is used to display the results\n// of the searches conducted. The parent must provide the searchTerm\n// and access to the array of JSON objects.\n_s(App, \"4BR89jkppc/9RPL0k/OXxT0Xa4I=\");\n_c = App;\nfunction ResultsComponent(props) {\n  // Within this component or function we create our\n  // filter function. It will be needed to conduct\n  // the search of the array of JSON objects.\n\n  function filterFunction(searchTerm) {\n    return function (data) {\n      // convert everything to lower case for string matching\n      let itemName = data.item_name.toLowerCase();\n      //      let itemType = items.item.itemType.toLowerCase();\n      return searchTerm !== \"\" && itemName.includes(searchTerm.toLowerCase());\n    };\n  }\n  // We can use the filter function to tell us how many search results\n  // we have. We find the length of the filtered array\n\n  let numberResults = props.arrayFromParent.filter(filterFunction(props.searchTermFromParent)).length;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"There are \", numberResults, \" search results \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), numberResults === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 31\n    }, this), numberResults > 0 && numberResults < 10 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Some results, not many\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 51\n    }, this), numberResults > 10 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Lots of results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 30\n    }, this), props.arrayFromParent.filter(filterFunction(props.searchTermFromParent)).map((a, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: a.item_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 18\n      }, this), \", Type:\", /*#__PURE__*/_jsxDEV(\"i\", {\n        children: a.item_type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 45\n      }, this), \", Price:\", a.item_price, \" \"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n} // end of child component for results.\n_c2 = ResultsComponent;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ResultsComponent\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","searchTerm","setSearchTerm","data","setData","loading","setLoading","error","setError","URL","fetchitemData","response","fetch","itemDataJson","json","children","toString","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onSearchFormChange","type","ResultsComponent","searchTermFromParent","arrayFromParent","event","target","value","_c","props","filterFunction","itemName","item_name","toLowerCase","includes","numberResults","filter","length","map","a","index","item_type","item_price","_c2","$RefreshReg$"],"sources":["/home/zlx/src/CS385Project/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n// Writing our own functions for use in our app\n// Writing a comment about a specific number.\n/*\nfunction writeNumberAsWords(n) {\n  let nAsStr = n.toString(10); // our number is in base 10\n  let digits = nAsStr.length; // number of digits\n  let firstDigit = nAsStr.charAt(0);\n\n  let message = \"nothing\";\n  if (digits === 9) {\n    message = \"(At least \" + firstDigit + \" hundred million!)\";\n  } else if (digits === 10) {\n    message = \"(At least \" + firstDigit + \" billion!)\";\n  } else {\n    message = \"(Lots of streams)\";\n  }\n\n  return message;\n}\n*/\n\n// Parent component - App\nfunction App() {\n  // lets keep the searchTerm as a state varaiable\n  // searchTerm is given an initial value of empty string\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const URL = \"http://45.77.38.37\";\n\n    async function fetchitemData() {\n      try {\n        const response = await fetch(URL);\n        const itemDataJson = await response.json(); // wait for the JSON response\n        setLoading(true);\n        // IMPORTANT - look at the JSON response - look at the structure\n        // This is where many errors occur!\n        setData(itemDataJson);\n      } catch (error) {\n        setError(error); // take the error message from the system\n        setLoading(false);\n      } // end try-catch block\n    } // end of fetchData\n    fetchitemData();\n  }, []);\n  if (error) {\n    return <h1>Opps! An error has occurred: {error.toString()}</h1>;\n  } else if (loading === false) {\n    return <h1>Waiting for the train data ...... waiting....</h1>;\n  } else {\n    return (\n      <>\n        <h1>CS385 Demo</h1>\n        <p>Your current search term is [{searchTerm}]</p>\n        <form>\n          <h3>Type your search here: </h3>\n          <input onChange={onSearchFormChange} type=\"text\" />\n        </form>\n        <hr />\n        <ResultsComponent\n          searchTermFromParent={searchTerm}\n          arrayFromParent={data}\n        />\n      </>\n    );\n  }\n  // Here is our textbox handler function.\n  // This handles the event that is fired when\n  // the search form (text box) changes\n  function onSearchFormChange(event) {\n    // An event is generated by Javascript.\n    // We use the hook setSearchTerm to safely assign\n    // the current value in the textbox to searchTerm\n    setSearchTerm(event.target.value);\n  }\n}\n\n// This is the child component. It is used to display the results\n// of the searches conducted. The parent must provide the searchTerm\n// and access to the array of JSON objects.\n\nfunction ResultsComponent(props) {\n  // Within this component or function we create our\n  // filter function. It will be needed to conduct\n  // the search of the array of JSON objects.\n\n  function filterFunction(searchTerm) {\n    return function (data) {\n      // convert everything to lower case for string matching\n      let itemName = data.item_name.toLowerCase();\n//      let itemType = items.item.itemType.toLowerCase();\n      return (\n        searchTerm !== \"\" &&\n        (itemName.includes(searchTerm.toLowerCase()))\n      );\n    };\n  }\n  // We can use the filter function to tell us how many search results\n  // we have. We find the length of the filtered array\n\n  let numberResults = props.arrayFromParent.filter(\n    filterFunction(props.searchTermFromParent)\n  ).length;\n\n  return (\n    <>\n      <h1>Search Results</h1>\n      <h2>There are {numberResults} search results </h2>\n      {numberResults === 0 && <p>No results</p>}\n      {numberResults > 0 && numberResults < 10 && <p>Some results, not many</p>}\n      {numberResults > 10 && <p>Lots of results</p>}\n      {props.arrayFromParent\n        .filter(filterFunction(props.searchTermFromParent))\n        .map((a, index) => (\n          <p key={index}>\n            Name:<b>{a.item_name}</b>, Type:<i>{a.item_type}</i>, Price:{a.item_price}{\" \"}\n          </p>\n        ))}\n    </>\n  );\n} // end of child component for results.\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}